version: '3'

services:

  crypto_assets_db:
    container_name: crypto_assets_db
    image: postgres:13.5
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - crypto_assets_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  crypto_assets_api:
    container_name: crypto_assets_api
    build: .
    restart: unless-stopped
    depends_on:
      crypto_assets_db:
        condition: service_healthy
    volumes:
      - .:/app
    ports:
      - "127.0.0.1:4381:80"
    command: ["python", "/app/crypto_assets/manage.py", "runserver", "0:80"]
    env_file:
      - .env

  crypto_assets_celery:
    container_name: crypto_assets_celery
    build: .
    working_dir: /app/crypto_assets
    command: ["celery", "-A", "crypto_assets", "worker", "-l", "info"]
    restart: unless-stopped
    volumes:
      - .:/app
    depends_on:
      crypto_assets_db:
        condition: service_healthy
      crypto_assets_redis:
        condition: service_healthy
    env_file:
      - .env

  crypto_assets_beat:
    container_name: crypto_assets_beat
    build: .
    working_dir: /app/crypto_assets
    command: ["celery", "-A", "crypto_assets", "beat", "-l", "info"]
    restart: unless-stopped
    volumes:
      - .:/app
    depends_on:
      crypto_assets_db:
        condition: service_healthy
      crypto_assets_redis:
        condition: service_healthy
    env_file:
      - .env

  crypto_assets_redis:
    container_name : crypto_assets_redis
    image: redis:6.2
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  crypto_assets_db:
